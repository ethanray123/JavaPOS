/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package posinterface;

import Hash.hashPass;
import MySQL.CRUD;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import MySQL.connect;
/**
 *
 * @author student
 */
public class admin extends javax.swing.JFrame {

    /**
     * Creates new form admin
     */
    public admin() {
        initComponents();
        Show_Jtable();
    }
    
    public ArrayList<Inventory> getinventoryList()
    {
        ArrayList<Inventory> inventoryList = new ArrayList<Inventory>();
        Connection connection = connect.getConnection();
        
        String query = "SELECT * FROM `inventory`";
        Statement st;
        ResultSet rs;
        
        try{
            st = connection.createStatement();
            rs = st.executeQuery(query);
            Inventory inventory;
            while(rs.next())
            {
                inventory = new Inventory(rs.getString("product"),rs.getDouble("price"),rs.getInt("quantity"));
                inventoryList.add(inventory);
            }
        }catch(Exception e){
            e.printStackTrace();
        }
        return inventoryList;
    }
    
    //show data in table
    
    public void Show_Jtable()
    {
        ArrayList<Inventory> list = getinventoryList();
        DefaultTableModel model = (DefaultTableModel)jTableDisplay.getModel();
        Object[] row = new Object[4];
        for(int i = 0;i < list.size(); i++){
            row[0] = list.get(i).getProdname();
            row[1] = list.get(i).getPrice();
            row[2] = list.get(i).getQuantity();
            
            model.addRow(row);
        }
    }
    //executing Query
    public void executeQuery(String query, String message)
    {
        Connection con = connect.getConnection();
        Statement st;
        try{
            st = con.createStatement();
            if(st.executeUpdate(query) == 1){
                DefaultTableModel model = (DefaultTableModel)jTableDisplay.getModel();
                model.setRowCount(0);
                Show_Jtable();
                JOptionPane.showMessageDialog(null, "Stock "+message+" Successfully");
            }else{
                JOptionPane.showMessageDialog(null, "Stock Not "+message);
            }
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        LogOut = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        Tab1 = new javax.swing.JPanel();
        AddIBtn = new javax.swing.JButton();
        RemoveIBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableDisplay = new javax.swing.JTable();
        Qnty = new javax.swing.JLabel();
        Prod = new javax.swing.JLabel();
        Price = new javax.swing.JLabel();
        Prc = new javax.swing.JTextField();
        Qnt = new javax.swing.JTextField();
        Pname = new javax.swing.JTextField();
        Nqnt = new javax.swing.JTextField();
        AddToInv = new javax.swing.JButton();
        RemoveFromInv = new javax.swing.JButton();
        BGMenu = new javax.swing.JLabel();
        Tab3 = new javax.swing.JPanel();
        UND = new javax.swing.JLabel();
        UnameD = new javax.swing.JTextField();
        PWD = new javax.swing.JLabel();
        PwordD = new javax.swing.JTextField();
        RD = new javax.swing.JLabel();
        RolePick = new javax.swing.JComboBox<>();
        SbtnD = new javax.swing.JButton();
        BGDel = new javax.swing.JLabel();
        Tab2 = new javax.swing.JPanel();
        UNU = new javax.swing.JLabel();
        UnameU = new javax.swing.JTextField();
        PWU = new javax.swing.JLabel();
        NPwordU = new javax.swing.JTextField();
        NPW = new javax.swing.JLabel();
        SbtnU = new javax.swing.JButton();
        PwordU = new javax.swing.JTextField();
        BGUpdate = new javax.swing.JLabel();
        Tab4 = new javax.swing.JPanel();
        UN = new javax.swing.JLabel();
        PW = new javax.swing.JLabel();
        Uname = new javax.swing.JTextField();
        Pword = new javax.swing.JTextField();
        Sbtn = new javax.swing.JButton();
        BGaddAdmin = new javax.swing.JLabel();
        BG = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin");
        setMinimumSize(new java.awt.Dimension(860, 530));
        setResizable(false);
        getContentPane().setLayout(null);

        LogOut.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        LogOut.setText("Log Out");
        LogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogOutActionPerformed(evt);
            }
        });
        getContentPane().add(LogOut);
        LogOut.setBounds(720, 10, 110, 30);

        Tab1.setLayout(null);

        AddIBtn.setBackground(new java.awt.Color(105, 240, 174));
        AddIBtn.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        AddIBtn.setText("Add Stock");
        AddIBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddIBtnActionPerformed(evt);
            }
        });
        Tab1.add(AddIBtn);
        AddIBtn.setBounds(20, 310, 140, 30);

        RemoveIBtn.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        RemoveIBtn.setText("Delete Stock");
        RemoveIBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveIBtnActionPerformed(evt);
            }
        });
        Tab1.add(RemoveIBtn);
        RemoveIBtn.setBounds(20, 350, 140, 30);

        jTableDisplay.setFont(new java.awt.Font("Lucida Console", 0, 11)); // NOI18N
        jTableDisplay.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product", "Price", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableDisplay.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableDisplayMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableDisplay);

        Tab1.add(jScrollPane1);
        jScrollPane1.setBounds(330, 30, 452, 402);

        Qnty.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        Qnty.setText("Quantity");
        Tab1.add(Qnty);
        Qnty.setBounds(20, 140, 100, 30);

        Prod.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        Prod.setText("Product");
        Tab1.add(Prod);
        Prod.setBounds(20, 60, 80, 30);

        Price.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        Price.setText("Price");
        Tab1.add(Price);
        Price.setBounds(20, 100, 80, 30);

        Prc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrcActionPerformed(evt);
            }
        });
        Tab1.add(Prc);
        Prc.setBounds(130, 100, 161, 30);

        Qnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QntActionPerformed(evt);
            }
        });
        Tab1.add(Qnt);
        Qnt.setBounds(130, 140, 161, 30);

        Pname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PnameActionPerformed(evt);
            }
        });
        Tab1.add(Pname);
        Pname.setBounds(130, 60, 161, 30);
        Tab1.add(Nqnt);
        Nqnt.setBounds(180, 310, 80, 30);

        AddToInv.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        AddToInv.setText("Add To Inventory");
        AddToInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddToInvActionPerformed(evt);
            }
        });
        Tab1.add(AddToInv);
        AddToInv.setBounds(20, 200, 230, 40);

        RemoveFromInv.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        RemoveFromInv.setText("Remove From Inventory");
        RemoveFromInv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveFromInvActionPerformed(evt);
            }
        });
        Tab1.add(RemoveFromInv);
        RemoveFromInv.setBounds(20, 250, 230, 40);

        BGMenu.setFont(new java.awt.Font("Script MT Bold", 1, 18)); // NOI18N
        BGMenu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/posinterface/Web-Background_Logos_01.png"))); // NOI18N
        BGMenu.setText("Product");
        Tab1.add(BGMenu);
        BGMenu.setBounds(0, 0, 810, 470);

        jTabbedPane1.addTab("Menu", Tab1);

        Tab3.setFont(new java.awt.Font("Shojumaru", 0, 11)); // NOI18N
        Tab3.setLayout(null);

        UND.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        UND.setText("Username");
        Tab3.add(UND);
        UND.setBounds(70, 70, 120, 30);

        UnameD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnameDActionPerformed(evt);
            }
        });
        Tab3.add(UnameD);
        UnameD.setBounds(200, 70, 161, 30);

        PWD.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        PWD.setText("Password");
        Tab3.add(PWD);
        PWD.setBounds(70, 110, 120, 30);

        PwordD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PwordDActionPerformed(evt);
            }
        });
        Tab3.add(PwordD);
        PwordD.setBounds(200, 110, 161, 30);

        RD.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        RD.setText("Role");
        Tab3.add(RD);
        RD.setBounds(70, 150, 120, 30);

        RolePick.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        RolePick.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Admin", "Cashier" }));
        RolePick.setToolTipText("");
        Tab3.add(RolePick);
        RolePick.setBounds(200, 150, 161, 30);

        SbtnD.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        SbtnD.setText("Submit");
        SbtnD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SbtnDActionPerformed(evt);
            }
        });
        Tab3.add(SbtnD);
        SbtnD.setBounds(70, 210, 100, 40);

        BGDel.setFont(new java.awt.Font("Script MT Bold", 0, 11)); // NOI18N
        BGDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/posinterface/Web-Background_Logos_01.png"))); // NOI18N
        Tab3.add(BGDel);
        BGDel.setBounds(0, 0, 810, 470);

        jTabbedPane1.addTab("Delete Account", Tab3);

        Tab2.setLayout(null);

        UNU.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        UNU.setText("Username");
        Tab2.add(UNU);
        UNU.setBounds(70, 70, 161, 30);

        UnameU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnameUActionPerformed(evt);
            }
        });
        Tab2.add(UnameU);
        UnameU.setBounds(240, 70, 161, 30);

        PWU.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        PWU.setText("Old Password");
        Tab2.add(PWU);
        PWU.setBounds(70, 110, 161, 30);

        NPwordU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NPwordUActionPerformed(evt);
            }
        });
        Tab2.add(NPwordU);
        NPwordU.setBounds(240, 150, 161, 30);

        NPW.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        NPW.setText("New Password");
        Tab2.add(NPW);
        NPW.setBounds(70, 150, 161, 30);

        SbtnU.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        SbtnU.setText("Submit");
        SbtnU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SbtnUActionPerformed(evt);
            }
        });
        Tab2.add(SbtnU);
        SbtnU.setBounds(70, 210, 100, 40);

        PwordU.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PwordUActionPerformed(evt);
            }
        });
        Tab2.add(PwordU);
        PwordU.setBounds(240, 110, 161, 30);

        BGUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/posinterface/Web-Background_Logos_01.png"))); // NOI18N
        Tab2.add(BGUpdate);
        BGUpdate.setBounds(0, 0, 810, 470);

        jTabbedPane1.addTab("Update Password", Tab2);

        Tab4.setFont(new java.awt.Font("Shojumaru", 0, 11)); // NOI18N
        Tab4.setLayout(null);

        UN.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        UN.setText("Username");
        Tab4.add(UN);
        UN.setBounds(70, 70, 161, 30);

        PW.setFont(new java.awt.Font("Script MT Bold", 0, 24)); // NOI18N
        PW.setText("Password");
        Tab4.add(PW);
        PW.setBounds(70, 110, 161, 30);

        Uname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UnameActionPerformed(evt);
            }
        });
        Tab4.add(Uname);
        Uname.setBounds(200, 70, 161, 30);

        Pword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PwordActionPerformed(evt);
            }
        });
        Tab4.add(Pword);
        Pword.setBounds(200, 110, 161, 30);

        Sbtn.setFont(new java.awt.Font("Script MT Bold", 0, 18)); // NOI18N
        Sbtn.setText("Submit");
        Sbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SbtnActionPerformed(evt);
            }
        });
        Tab4.add(Sbtn);
        Sbtn.setBounds(70, 170, 100, 40);

        BGaddAdmin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/posinterface/Web-Background_Logos_01.png"))); // NOI18N
        Tab4.add(BGaddAdmin);
        BGaddAdmin.setBounds(0, -20, 810, 510);

        jTabbedPane1.addTab("Add an Admin", Tab4);

        getContentPane().add(jTabbedPane1);
        jTabbedPane1.setBounds(20, 20, 810, 500);

        BG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/posinterface/pie-wallpaper-1.jpg"))); // NOI18N
        BG.setMaximumSize(new java.awt.Dimension(860, 530));
        BG.setMinimumSize(new java.awt.Dimension(860, 530));
        BG.setPreferredSize(new java.awt.Dimension(860, 530));
        getContentPane().add(BG);
        BG.setBounds(0, 0, 860, 530);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void AddIBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddIBtnActionPerformed
        String product = Pname.getText();
        int newqnt = Integer.parseInt(Nqnt.getText());
        
        try{
            Connection con = connect.getConnection();
            ResultSet rs = CRUD.selectInventoryQ(con,product);
            
            rs.next();
            int st = newqnt + rs.getInt("Quantity");
            
            String query = "UPDATE `inventory` SET `Quantity` = '"+st+"' WHERE `inventory`.`Product` = '"+product+"'";
            executeQuery(query,"Updated");
            Pname.setText("");
            Prc.setText("");
            Qnt.setText("");
        }catch(Exception e){
            System.out.println(e);
        }
        
    }//GEN-LAST:event_AddIBtnActionPerformed

    private void RemoveIBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveIBtnActionPerformed
        String product = Pname.getText();
        int newqnt = Integer.parseInt(Nqnt.getText());
        
        try{
            Connection con = connect.getConnection();
            ResultSet rs = CRUD.selectInventoryQ(con,product);
            
            rs.next();
            
            int stock = rs.getInt("Quantity") - newqnt;
            if(stock >= 0){
                String query = "UPDATE `inventory` SET `Quantity` = '"+stock+"' WHERE `inventory`.`Product` = '"+product+"'";
                executeQuery(query,"Updated");
                Pname.setText("");
                Prc.setText("");
                Qnt.setText("");
            }else{
                JOptionPane.showMessageDialog(null, "Stock not enough to remove");
            }
            
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_RemoveIBtnActionPerformed

    private void UnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UnameActionPerformed

    private void PwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PwordActionPerformed

    private void UnameDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnameDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UnameDActionPerformed

    private void PwordDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PwordDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PwordDActionPerformed

    private void UnameUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UnameUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UnameUActionPerformed

    private void NPwordUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NPwordUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NPwordUActionPerformed

    private void SbtnDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SbtnDActionPerformed
        String username = UnameD.getText();
        try
        {
            Connection con = connect.getConnection();
            CRUD.deleteUser(con,username);
            JOptionPane.showMessageDialog(null, "User "+username+" Deleted Successfully");
        }catch(Exception e){
            System.out.println(e);
            JOptionPane.showMessageDialog(null, "User "+username+" Was not Deleted..");
        }
    }//GEN-LAST:event_SbtnDActionPerformed

    private void LogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogOutActionPerformed
        Login log = new Login();
        log.setVisible(true);
        dispose();
    }//GEN-LAST:event_LogOutActionPerformed

    private void SbtnUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SbtnUActionPerformed
        String username = UnameU.getText();
        String oldpassword = PwordU.getText();
        String newpassword = NPwordU.getText();
        
        try{
            Connection con = connect.getConnection();
            CRUD.updatePassword(con,username,oldpassword,newpassword);
        }catch(Exception e){
            System.out.println(e);
        }
    }//GEN-LAST:event_SbtnUActionPerformed

    private void PwordUActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PwordUActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PwordUActionPerformed

    private void SbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SbtnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SbtnActionPerformed

    private void jTableDisplayMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableDisplayMouseClicked
        //display row in text fields
        int i = jTableDisplay.getSelectedRow();
        TableModel model = jTableDisplay.getModel();
        Pname.setText(model.getValueAt(i,0).toString());
        Prc.setText(model.getValueAt(i,1).toString());
        Qnt.setText(model.getValueAt(i,2).toString());
    }//GEN-LAST:event_jTableDisplayMouseClicked

    private void PrcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrcActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PrcActionPerformed

    private void QntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QntActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QntActionPerformed

    private void PnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PnameActionPerformed

    private void AddToInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddToInvActionPerformed
        String product = Pname.getText();
        String price = Prc.getText();
        String quantity = Qnt.getText();
        try
        {
            Connection con = connect.getConnection();
            CRUD.insertInventory(con,product,price,quantity);
            ResultSet rs = CRUD.selectInventoryP(con,product,price,quantity);
            
            rs.next();
                if(rs.getString("product").equals(product)){
                    JOptionPane.showMessageDialog(null, ""+product+" Successfully Added To Inventory");
                }else{
                    
                }
                DefaultTableModel model = (DefaultTableModel)jTableDisplay.getModel();
                model.setRowCount(0);
                Show_Jtable();
        }catch(Exception e){
            System.out.println(e);
            JOptionPane.showMessageDialog(null, ""+product+" Could Not Be Added To Inventory");
        }
    }//GEN-LAST:event_AddToInvActionPerformed

    private void RemoveFromInvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveFromInvActionPerformed
        String product = Pname.getText();
        String price = Prc.getText();
        String quantity = Qnt.getText();
        try
        {
            Connection con = connect.getConnection();
            CRUD.deleteInventory(con,product,price,quantity);
            JOptionPane.showMessageDialog(null, ""+product+" Successfully Removed Inventory");
            DefaultTableModel model = (DefaultTableModel)jTableDisplay.getModel();
            model.setRowCount(0);
            Show_Jtable();
        }catch(Exception e){
            System.out.println(e);
            JOptionPane.showMessageDialog(null, ""+product+" Could Not Be Removed from Inventory");
        }
    }//GEN-LAST:event_RemoveFromInvActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(admin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new admin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddIBtn;
    private javax.swing.JButton AddToInv;
    private javax.swing.JLabel BG;
    private javax.swing.JLabel BGDel;
    private javax.swing.JLabel BGMenu;
    private javax.swing.JLabel BGUpdate;
    private javax.swing.JLabel BGaddAdmin;
    private javax.swing.JButton LogOut;
    private javax.swing.JLabel NPW;
    private javax.swing.JTextField NPwordU;
    private javax.swing.JTextField Nqnt;
    private javax.swing.JLabel PW;
    private javax.swing.JLabel PWD;
    private javax.swing.JLabel PWU;
    private javax.swing.JTextField Pname;
    private javax.swing.JTextField Prc;
    private javax.swing.JLabel Price;
    private javax.swing.JLabel Prod;
    private javax.swing.JTextField Pword;
    private javax.swing.JTextField PwordD;
    private javax.swing.JTextField PwordU;
    private javax.swing.JTextField Qnt;
    private javax.swing.JLabel Qnty;
    private javax.swing.JLabel RD;
    private javax.swing.JButton RemoveFromInv;
    private javax.swing.JButton RemoveIBtn;
    private javax.swing.JComboBox<String> RolePick;
    private javax.swing.JButton Sbtn;
    private javax.swing.JButton SbtnD;
    private javax.swing.JButton SbtnU;
    private javax.swing.JPanel Tab1;
    private javax.swing.JPanel Tab2;
    private javax.swing.JPanel Tab3;
    private javax.swing.JPanel Tab4;
    private javax.swing.JLabel UN;
    private javax.swing.JLabel UND;
    private javax.swing.JLabel UNU;
    private javax.swing.JTextField Uname;
    private javax.swing.JTextField UnameD;
    private javax.swing.JTextField UnameU;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableDisplay;
    // End of variables declaration//GEN-END:variables
}
